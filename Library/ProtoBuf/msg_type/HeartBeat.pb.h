/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_YA_HEARTBEAT_PB_H_INCLUDED
#define PB_YA_HEARTBEAT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ya_SLOT_INFO {
    int32_t slotId; /* 槽位ID 1-4 */
    int32_t status; /* 槽位状态 0空闲 1占用不充电 2占用充电 3故障 */
    int32_t errorCode; /* 故障代码 status=3时不能为空 */
    int32_t voltage; /* 电压（伏特：V） */
    int32_t ec; /* 电流（0.1A） */
    int32_t power; /* 功率（瓦：W） */
    int32_t totalElectric; /* 耗电量 分辨率 0.01kWh */
    int32_t money; /* 预估费用（分） */
    char orderNo[20]; /* 订单号 */
} ya_SLOT_INFO;

/* 心跳指令 device_to_server */
typedef struct _ya_HEARTBEAT_REQ {
    int32_t internetAccessMode; /* 上网方式 1:4G 2:WIFI */
    int32_t networkType; /* 网络类型 1:4G 2:2G */
    int32_t signal; /* 信号强度 */
    int32_t temp1; /* 检测点温度1 */
    int32_t temp2; /* 检测点温度2 */
    int32_t temp3; /* 检测点温度3 */
    char versionNum[20]; /* APP版本号 */
    pb_size_t slotInfo_count;
    ya_SLOT_INFO slotInfo[4]; /* 槽位信息 */
} ya_HEARTBEAT_REQ;

typedef struct _ya_HEARTBEAT_RES {
    int32_t code; /* 结果 0-接收成功 1-接收失败 */
} ya_HEARTBEAT_RES;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ya_SLOT_INFO_init_default                {0, 0, 0, 0, 0, 0, 0, 0, ""}
#define ya_HEARTBEAT_REQ_init_default            {0, 0, 0, 0, 0, 0, "", 0, {ya_SLOT_INFO_init_default, ya_SLOT_INFO_init_default, ya_SLOT_INFO_init_default, ya_SLOT_INFO_init_default}}
#define ya_HEARTBEAT_RES_init_default            {0}
#define ya_SLOT_INFO_init_zero                   {0, 0, 0, 0, 0, 0, 0, 0, ""}
#define ya_HEARTBEAT_REQ_init_zero               {0, 0, 0, 0, 0, 0, "", 0, {ya_SLOT_INFO_init_zero, ya_SLOT_INFO_init_zero, ya_SLOT_INFO_init_zero, ya_SLOT_INFO_init_zero}}
#define ya_HEARTBEAT_RES_init_zero               {0}

/* Field tags (for use in manual encoding/decoding) */
#define ya_SLOT_INFO_slotId_tag                  1
#define ya_SLOT_INFO_status_tag                  2
#define ya_SLOT_INFO_errorCode_tag               3
#define ya_SLOT_INFO_voltage_tag                 4
#define ya_SLOT_INFO_ec_tag                      5
#define ya_SLOT_INFO_power_tag                   6
#define ya_SLOT_INFO_totalElectric_tag           7
#define ya_SLOT_INFO_money_tag                   8
#define ya_SLOT_INFO_orderNo_tag                 9
#define ya_HEARTBEAT_REQ_internetAccessMode_tag  1
#define ya_HEARTBEAT_REQ_networkType_tag         2
#define ya_HEARTBEAT_REQ_signal_tag              3
#define ya_HEARTBEAT_REQ_temp1_tag               4
#define ya_HEARTBEAT_REQ_temp2_tag               5
#define ya_HEARTBEAT_REQ_temp3_tag               6
#define ya_HEARTBEAT_REQ_versionNum_tag          8
#define ya_HEARTBEAT_REQ_slotInfo_tag            9
#define ya_HEARTBEAT_RES_code_tag                1

/* Struct field encoding specification for nanopb */
#define ya_SLOT_INFO_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    slotId,            1) \
X(a, STATIC,   SINGULAR, INT32,    status,            2) \
X(a, STATIC,   SINGULAR, INT32,    errorCode,         3) \
X(a, STATIC,   SINGULAR, INT32,    voltage,           4) \
X(a, STATIC,   SINGULAR, INT32,    ec,                5) \
X(a, STATIC,   SINGULAR, INT32,    power,             6) \
X(a, STATIC,   SINGULAR, INT32,    totalElectric,     7) \
X(a, STATIC,   SINGULAR, INT32,    money,             8) \
X(a, STATIC,   SINGULAR, STRING,   orderNo,           9)
#define ya_SLOT_INFO_CALLBACK NULL
#define ya_SLOT_INFO_DEFAULT NULL

#define ya_HEARTBEAT_REQ_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    internetAccessMode,   1) \
X(a, STATIC,   SINGULAR, INT32,    networkType,       2) \
X(a, STATIC,   SINGULAR, INT32,    signal,            3) \
X(a, STATIC,   SINGULAR, INT32,    temp1,             4) \
X(a, STATIC,   SINGULAR, INT32,    temp2,             5) \
X(a, STATIC,   SINGULAR, INT32,    temp3,             6) \
X(a, STATIC,   SINGULAR, STRING,   versionNum,        8) \
X(a, STATIC,   REPEATED, MESSAGE,  slotInfo,          9)
#define ya_HEARTBEAT_REQ_CALLBACK NULL
#define ya_HEARTBEAT_REQ_DEFAULT NULL
#define ya_HEARTBEAT_REQ_slotInfo_MSGTYPE ya_SLOT_INFO

#define ya_HEARTBEAT_RES_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    code,              1)
#define ya_HEARTBEAT_RES_CALLBACK NULL
#define ya_HEARTBEAT_RES_DEFAULT NULL

extern const pb_msgdesc_t ya_SLOT_INFO_msg;
extern const pb_msgdesc_t ya_HEARTBEAT_REQ_msg;
extern const pb_msgdesc_t ya_HEARTBEAT_RES_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ya_SLOT_INFO_fields &ya_SLOT_INFO_msg
#define ya_HEARTBEAT_REQ_fields &ya_HEARTBEAT_REQ_msg
#define ya_HEARTBEAT_RES_fields &ya_HEARTBEAT_RES_msg

/* Maximum encoded size of messages (where known) */
#define YA_HEARTBEAT_PB_H_MAX_SIZE               ya_HEARTBEAT_REQ_size
#define ya_HEARTBEAT_REQ_size                    531
#define ya_HEARTBEAT_RES_size                    11
#define ya_SLOT_INFO_size                        109

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
