/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_YA_LOCATION_PB_H_INCLUDED
#define PB_YA_LOCATION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* 定位指令 device_to_server */
typedef struct _ya_LOCATION_REQ {
    char mcuSdkVersion[15]; /* MCU SDK 版本 */
    char versionNum[15]; /* 版本号 */
    char bis[255]; /* BIS 基站定位信息 */
    char iccid[25]; /* 物联网卡号 */
} ya_LOCATION_REQ;

typedef struct _ya_LOCATION_RES {
    int32_t code; /* 结果 1:成功 其他:失败 */
} ya_LOCATION_RES;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ya_LOCATION_REQ_init_default             {"", "", "", ""}
#define ya_LOCATION_RES_init_default             {0}
#define ya_LOCATION_REQ_init_zero                {"", "", "", ""}
#define ya_LOCATION_RES_init_zero                {0}

/* Field tags (for use in manual encoding/decoding) */
#define ya_LOCATION_REQ_mcuSdkVersion_tag        1
#define ya_LOCATION_REQ_versionNum_tag           2
#define ya_LOCATION_REQ_bis_tag                  3
#define ya_LOCATION_REQ_iccid_tag                4
#define ya_LOCATION_RES_code_tag                 1

/* Struct field encoding specification for nanopb */
#define ya_LOCATION_REQ_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   mcuSdkVersion,     1) \
X(a, STATIC,   SINGULAR, STRING,   versionNum,        2) \
X(a, STATIC,   SINGULAR, STRING,   bis,               3) \
X(a, STATIC,   SINGULAR, STRING,   iccid,             4)
#define ya_LOCATION_REQ_CALLBACK NULL
#define ya_LOCATION_REQ_DEFAULT NULL

#define ya_LOCATION_RES_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    code,              1)
#define ya_LOCATION_RES_CALLBACK NULL
#define ya_LOCATION_RES_DEFAULT NULL

extern const pb_msgdesc_t ya_LOCATION_REQ_msg;
extern const pb_msgdesc_t ya_LOCATION_RES_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ya_LOCATION_REQ_fields &ya_LOCATION_REQ_msg
#define ya_LOCATION_RES_fields &ya_LOCATION_RES_msg

/* Maximum encoded size of messages (where known) */
#define YA_LOCATION_PB_H_MAX_SIZE                ya_LOCATION_REQ_size
#define ya_LOCATION_REQ_size                     315
#define ya_LOCATION_RES_size                     11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
