/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_YA_RESTART_PB_H_INCLUDED
#define PB_YA_RESTART_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* 重启指令 server_to_device */
typedef struct _ya_RESTART_REQ {
    int32_t restartType; /* 重启类型 1:MCU 2:保留 */
} ya_RESTART_REQ;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ya_RESTART_REQ_init_default              {0}
#define ya_RESTART_REQ_init_zero                 {0}

/* Field tags (for use in manual encoding/decoding) */
#define ya_RESTART_REQ_restartType_tag           1

/* Struct field encoding specification for nanopb */
#define ya_RESTART_REQ_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    restartType,       1)
#define ya_RESTART_REQ_CALLBACK NULL
#define ya_RESTART_REQ_DEFAULT NULL

extern const pb_msgdesc_t ya_RESTART_REQ_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ya_RESTART_REQ_fields &ya_RESTART_REQ_msg

/* Maximum encoded size of messages (where known) */
#define YA_RESTART_PB_H_MAX_SIZE                 ya_RESTART_REQ_size
#define ya_RESTART_REQ_size                      11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
