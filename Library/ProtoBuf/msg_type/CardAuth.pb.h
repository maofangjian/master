/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_MSG_TYPE_CARDAUTH_PB_H_INCLUDED
#define PB_MSG_TYPE_CARDAUTH_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CARD_AUTH_ACK_STR {
    int32_t gunId;
    int32_t result;
    int32_t cardType;
    int32_t rsv;
    int32_t userMomey;
    char order[20];
} CARD_AUTH_ACK_STR;

typedef struct _CARD_AUTH_REQ_STR {
    int32_t gunId;
    int32_t cardType;
    int32_t optType;
    char cardId[17];
    char cardPsw[8];
    int32_t chgMode;
    int32_t chgPara;
} CARD_AUTH_REQ_STR;


/* Initializer values for message structs */
#define CARD_AUTH_REQ_STR_init_default           {0, 0, 0, "", "", 0, 0}
#define CARD_AUTH_ACK_STR_init_default           {0, 0, 0, 0, 0, ""}
#define CARD_AUTH_REQ_STR_init_zero              {0, 0, 0, "", "", 0, 0}
#define CARD_AUTH_ACK_STR_init_zero              {0, 0, 0, 0, 0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define CARD_AUTH_ACK_STR_gunId_tag              1
#define CARD_AUTH_ACK_STR_result_tag             2
#define CARD_AUTH_ACK_STR_cardType_tag           3
#define CARD_AUTH_ACK_STR_rsv_tag                4
#define CARD_AUTH_ACK_STR_userMomey_tag          5
#define CARD_AUTH_ACK_STR_order_tag              6
#define CARD_AUTH_REQ_STR_gunId_tag              1
#define CARD_AUTH_REQ_STR_cardType_tag           2
#define CARD_AUTH_REQ_STR_optType_tag            3
#define CARD_AUTH_REQ_STR_cardId_tag             4
#define CARD_AUTH_REQ_STR_cardPsw_tag            5
#define CARD_AUTH_REQ_STR_chgMode_tag            6
#define CARD_AUTH_REQ_STR_chgPara_tag            7

/* Struct field encoding specification for nanopb */
#define CARD_AUTH_REQ_STR_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    gunId,             1) \
X(a, STATIC,   SINGULAR, INT32,    cardType,          2) \
X(a, STATIC,   SINGULAR, INT32,    optType,           3) \
X(a, STATIC,   SINGULAR, STRING,   cardId,            4) \
X(a, STATIC,   SINGULAR, STRING,   cardPsw,           5) \
X(a, STATIC,   SINGULAR, INT32,    chgMode,           6) \
X(a, STATIC,   SINGULAR, INT32,    chgPara,           7)
#define CARD_AUTH_REQ_STR_CALLBACK NULL
#define CARD_AUTH_REQ_STR_DEFAULT NULL

#define CARD_AUTH_ACK_STR_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    gunId,             1) \
X(a, STATIC,   SINGULAR, INT32,    result,            2) \
X(a, STATIC,   SINGULAR, INT32,    cardType,          3) \
X(a, STATIC,   SINGULAR, INT32,    rsv,               4) \
X(a, STATIC,   SINGULAR, INT32,    userMomey,         5) \
X(a, STATIC,   SINGULAR, STRING,   order,             6)
#define CARD_AUTH_ACK_STR_CALLBACK NULL
#define CARD_AUTH_ACK_STR_DEFAULT NULL

extern const pb_msgdesc_t CARD_AUTH_REQ_STR_msg;
extern const pb_msgdesc_t CARD_AUTH_ACK_STR_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CARD_AUTH_REQ_STR_fields &CARD_AUTH_REQ_STR_msg
#define CARD_AUTH_ACK_STR_fields &CARD_AUTH_ACK_STR_msg

/* Maximum encoded size of messages (where known) */
#define CARD_AUTH_REQ_STR_size                   81
#define CARD_AUTH_ACK_STR_size                   76

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
