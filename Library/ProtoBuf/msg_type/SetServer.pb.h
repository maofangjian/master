/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_YA_SETSERVER_PB_H_INCLUDED
#define PB_YA_SETSERVER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* 切换服务器指令 server_to_device */
typedef struct _ya_SET_SERVER_REQ {
    char serverHost[48]; /* mqtt 地址 */
    int32_t serverPort; /* mqtt 端口 */
    char serverUser[20]; /* mqtt 用户 */
    char serverPass[32]; /* mqtt 密码 */
} ya_SET_SERVER_REQ;

typedef struct _ya_SET_SERVER_RES {
    int32_t code; /* 结果 0：成功 1：失败 */
} ya_SET_SERVER_RES;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ya_SET_SERVER_REQ_init_default           {"", 0, "", ""}
#define ya_SET_SERVER_RES_init_default           {0}
#define ya_SET_SERVER_REQ_init_zero              {"", 0, "", ""}
#define ya_SET_SERVER_RES_init_zero              {0}

/* Field tags (for use in manual encoding/decoding) */
#define ya_SET_SERVER_REQ_serverHost_tag         1
#define ya_SET_SERVER_REQ_serverPort_tag         2
#define ya_SET_SERVER_REQ_serverUser_tag         3
#define ya_SET_SERVER_REQ_serverPass_tag         4
#define ya_SET_SERVER_RES_code_tag               1

/* Struct field encoding specification for nanopb */
#define ya_SET_SERVER_REQ_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   serverHost,        1) \
X(a, STATIC,   SINGULAR, INT32,    serverPort,        2) \
X(a, STATIC,   SINGULAR, STRING,   serverUser,        3) \
X(a, STATIC,   SINGULAR, STRING,   serverPass,        4)
#define ya_SET_SERVER_REQ_CALLBACK NULL
#define ya_SET_SERVER_REQ_DEFAULT NULL

#define ya_SET_SERVER_RES_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    code,              1)
#define ya_SET_SERVER_RES_CALLBACK NULL
#define ya_SET_SERVER_RES_DEFAULT NULL

extern const pb_msgdesc_t ya_SET_SERVER_REQ_msg;
extern const pb_msgdesc_t ya_SET_SERVER_RES_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ya_SET_SERVER_REQ_fields &ya_SET_SERVER_REQ_msg
#define ya_SET_SERVER_RES_fields &ya_SET_SERVER_RES_msg

/* Maximum encoded size of messages (where known) */
#define YA_SETSERVER_PB_H_MAX_SIZE               ya_SET_SERVER_REQ_size
#define ya_SET_SERVER_REQ_size                   114
#define ya_SET_SERVER_RES_size                   11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
