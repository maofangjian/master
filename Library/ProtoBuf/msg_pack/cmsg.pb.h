/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_MSG_PACK_CMSG_PB_H_INCLUDED
#define PB_MSG_PACK_CMSG_PB_H_INCLUDED
#include <pb.h>
#include "google/protobuf/any.pb.h"
#include "msg_pack/commonhead.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CMsg {
    bool has_head;
    CommonHead head;
    bool has_body;
    google_protobuf_Any body;
} CMsg;


/* Initializer values for message structs */
#define CMsg_init_default                        {false, CommonHead_init_default, false, google_protobuf_Any_init_default}
#define CMsg_init_zero                           {false, CommonHead_init_zero, false, google_protobuf_Any_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define CMsg_head_tag                            1
#define CMsg_body_tag                            2

/* Struct field encoding specification for nanopb */
#define CMsg_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  head,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  body,              2)
#define CMsg_CALLBACK NULL
#define CMsg_DEFAULT NULL
#define CMsg_head_MSGTYPE CommonHead
#define CMsg_body_MSGTYPE google_protobuf_Any

extern const pb_msgdesc_t CMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CMsg_fields &CMsg_msg

/* Maximum encoded size of messages (where known) */
#define CMsg_size                                1150

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
