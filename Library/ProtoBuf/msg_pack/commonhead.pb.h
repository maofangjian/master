/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_MSG_PACK_COMMONHEAD_PB_H_INCLUDED
#define PB_MSG_PACK_COMMONHEAD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MQTT_CMD {
    MQTT_CMD_CMD_NONE = 0,
    MQTT_CMD_START_UP = 1,
    MQTT_CMD_CARD_ID_REQ = 2,
    MQTT_CMD_REMOTE_START_CHG = 3,
    MQTT_CMD_REMOTE_STOP_CHG = 4,
    MQTT_CMD_START_CHG_NOTIFY = 5,
    MQTT_CMD_STOP_CHG_NOTIFY = 6,
    MQTT_CMD_HEART_BEAT = 7,
    MQTT_CMD_COST_DOWN = 8,
    MQTT_CMD_COST_REQ = 9,
    MQTT_CMD_DOWN_FW_INFO = 10,
    MQTT_CMD_REMOTE_CTRL = 11,
    MQTT_CMD_EVENT_NOTICE = 12,
    MQTT_CMD_SWITCH_SERVERIP = 13,
    MQTT_CMD_LOCATION_MSG = 14,
    MQTT_CMD_QUERY_CTRL = 15
} MQTT_CMD;

typedef enum _ProtocolBuffersVersions {
    ProtocolBuffersVersions_PB_VER_UNKNOWN = 0,
    ProtocolBuffersVersions_PB_VER_1 = 1,
    ProtocolBuffersVersions_PB_VER_LATEST = 1
} ProtocolBuffersVersions;

/* Struct definitions */
typedef struct _CommonHead {
    int32_t sn;
    MQTT_CMD cmd;
    ProtocolBuffersVersions pb_ver;
    char tran_id[37];
} CommonHead;


/* Helper constants for enums */
#define _MQTT_CMD_MIN MQTT_CMD_CMD_NONE
#define _MQTT_CMD_MAX MQTT_CMD_QUERY_CTRL
#define _MQTT_CMD_ARRAYSIZE ((MQTT_CMD)(MQTT_CMD_QUERY_CTRL+1))

#define _ProtocolBuffersVersions_MIN ProtocolBuffersVersions_PB_VER_UNKNOWN
#define _ProtocolBuffersVersions_MAX ProtocolBuffersVersions_PB_VER_LATEST
#define _ProtocolBuffersVersions_ARRAYSIZE ((ProtocolBuffersVersions)(ProtocolBuffersVersions_PB_VER_LATEST+1))


/* Initializer values for message structs */
#define CommonHead_init_default                  {0, _MQTT_CMD_MIN, _ProtocolBuffersVersions_MIN, ""}
#define CommonHead_init_zero                     {0, _MQTT_CMD_MIN, _ProtocolBuffersVersions_MIN, ""}

/* Field tags (for use in manual encoding/decoding) */
#define CommonHead_sn_tag                        1
#define CommonHead_cmd_tag                       2
#define CommonHead_pb_ver_tag                    3
#define CommonHead_tran_id_tag                   4

/* Struct field encoding specification for nanopb */
#define CommonHead_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    sn,                1) \
X(a, STATIC,   SINGULAR, UENUM,    cmd,               2) \
X(a, STATIC,   SINGULAR, UENUM,    pb_ver,            3) \
X(a, STATIC,   SINGULAR, STRING,   tran_id,           4)
#define CommonHead_CALLBACK NULL
#define CommonHead_DEFAULT NULL

extern const pb_msgdesc_t CommonHead_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CommonHead_fields &CommonHead_msg

/* Maximum encoded size of messages (where known) */
#define CommonHead_size                          53

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
